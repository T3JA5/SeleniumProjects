<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="2" passed="1">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="173110" started-at="2020-05-08T15:54:06 IST" finished-at="2020-05-08T15:56:59 IST">
    <groups>
    </groups>
    <test name="Default test" duration-ms="173110" started-at="2020-05-08T15:54:06 IST" finished-at="2020-05-08T15:56:59 IST">
      <class name="com.yatra.POMTest">
        <test-method status="PASS" signature="before_test()[pri:0, instance:com.yatra.POMTest@76707e36]" name="before_test" is-config="true" duration-ms="24863" started-at="2020-05-08T15:54:06 IST" finished-at="2020-05-08T15:54:31 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before_test -->
        <test-method status="FAIL" signature="book_flight_one_way(java.lang.String, java.lang.String, java.lang.String, int)[pri:0, instance:com.yatra.POMTest@76707e36]" name="book_flight_one_way" duration-ms="45473" started-at="2020-05-08T15:54:31 IST" data-provider="oneway" finished-at="2020-05-08T15:55:16 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[DEL]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[PNQ]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[15/12/2020]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [New Delhi (DEL)] but found [Douala (DLA)]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [New Delhi (DEL)] but found [Douala (DLA)]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:575)
at org.testng.Assert.assertEquals(Assert.java:585)
at com.yatra.SelectFlight.validate(SelectFlight.java:29)
at com.yatra.POMTest.book_flight_one_way(POMTest.java:49)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- book_flight_one_way -->
        <test-method status="PASS" signature="after_test()[pri:0, instance:com.yatra.POMTest@76707e36]" name="after_test" is-config="true" duration-ms="851" started-at="2020-05-08T15:55:16 IST" finished-at="2020-05-08T15:55:17 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after_test -->
        <test-method status="PASS" signature="before_test()[pri:0, instance:com.yatra.POMTest@76707e36]" name="before_test" is-config="true" duration-ms="19890" started-at="2020-05-08T15:55:17 IST" finished-at="2020-05-08T15:55:37 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before_test -->
        <test-method status="PASS" signature="book_flight_round_trip(java.lang.String, java.lang.String, java.lang.String, java.lang.String, int)[pri:0, instance:com.yatra.POMTest@76707e36]" name="book_flight_round_trip" duration-ms="81071" started-at="2020-05-08T15:55:37 IST" data-provider="round" finished-at="2020-05-08T15:56:58 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[DEL]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[BOM]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[20/12/2020]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[21/12/2020]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- book_flight_round_trip -->
        <test-method status="PASS" signature="after_test()[pri:0, instance:com.yatra.POMTest@76707e36]" name="after_test" is-config="true" duration-ms="874" started-at="2020-05-08T15:56:58 IST" finished-at="2020-05-08T15:56:59 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after_test -->
      </class> <!-- com.yatra.POMTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
